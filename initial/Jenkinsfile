pipeline{
    agent{
        label 'master'
    }

    environment{
        BUILD_DIR="${WORKSPACE}/initial"
    }

    stages{
        stage('Checkout'){
            steps{
                checkout([$class: 'GitSCM', branches: [[name: '*/develop']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'GITHUB_USER', url: 'https://github.com/julianogpc/gs-spring-boot.git']]])
            }
        }

        stage('Build'){
            steps{
                dir("${BUILD_DIR}"){
                    sh '''
                        ./gradlew bootJar
                    '''
                }
            }
        }

        stage('Publish'){
            steps{
                dir("${BUILD_DIR}"){
                    withDockerServer([credentialsId: 'DOCKER_CERT', uri: "${DOCKER_HOST}"]) {
                        script{
                            def image = docker.build("docker.pkg.github.com/julianogpc/gs-spring-boot/gs-spring-boot:${env.BUILD_ID}", ".")
                            withDockerRegistry(credentialsId: 'GITHUB_USER', url: 'https://docker.pkg.github.com/julianogpc/gs-spring-boot') {
                                image.push()
                            }
                        }
                    }
                }
            }
        }

        stage('Deploy'){
            steps{
                echo ""
            }
        }
    }
}