# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'initial/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)/initial/target/
    artifactName: WebApp
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/initial/target/spring-boot-0.0.1-SNAPSHOT.jar'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: Docker@2
  inputs:
    containerRegistry: 'Docker Hub - julianogpc'
    repository: 'julianogpc/gs-spring-boot'
    command: 'build'
    Dockerfile: '**/initial/Dockerfile'
    arguments: '--build-arg JAR_FILE=target/spring-boot-0.0.1-SNAPSHOT.jar'